// SYNTAX TEST "source.bait" "types"

// BUILTIN TYPES

struct BuiltinTypes {
    a i8
//    ^^ support.type.builtin
    b i16
//    ^^^ support.type.builtin
    c i32
//    ^^^ support.type.builtin
    d i64
//    ^^^ support.type.builtin
    e bool
//    ^^^^ support.type.builtin
    f string
//    ^^^^^^ support.type.builtin
    g void
//     ^^^^ support.type.builtin
    h byte
//      ^^^^ support.type.builtin
}

fun type_casting() {
    x := i32(a)
//       ^^^ support.type.builtin
    y := &void(0)
//        ^^^^ support.type.builtin
}

// METHOD RECEIVERS

fun (s []i32) simple_receiver () {}
//       ^^^ support.type.receiver

fun (f Foo) struct_method() {}
//     ^^^ support.type.receiver

fun (a []&ast.TypeSymbol) custom_defined() {}
//        ^^^^^^^^^^^^^^ support.type.receiver

fun (bpp &&byte) complex() {}
//         ^^^^ support.type.receiver

fun (a [][]string) nested_arr() {}
//         ^^^^^^ support.type.receiver
